Search.setIndex({"docnames": ["helper", "index", "map_generator", "modules", "path_finder", "server"], "filenames": ["helper.rst", "index.rst", "map_generator.rst", "modules.rst", "path_finder.rst", "server.rst"], "titles": ["helper module", "Welcome to EleNa Documentation\u2019s documentation!", "map_generator package", "server", "path_finder package", "server module"], "terms": {"class": [0, 2, 4], "sourc": [0, 2, 4, 5], "base": [0, 2, 4, 5], "object": [0, 2, 4], "route_length": [0, 3], "graph": [0, 2, 4], "path": [0, 4, 5], "list": [0, 4], "calcul": [0, 4], "length": [0, 4], "given": [0, 4], "arg": [0, 2, 4], "osmnx": [0, 2, 4], "gener": [0, 2, 4], "destin": [0, 2, 4, 5], "citi": [0, 2, 4], "int": [0, 4], "A": [0, 2, 4], "connect": 0, "form": 0, "arrai": [0, 4, 5], "node": [0, 2, 4], "from": [0, 2, 4], "return": [0, 2, 4], "float": [0, 4], "The": [0, 2, 4], "validate_address": [0, 3], "address": [0, 2], "str": [0, 2, 4], "valid": 0, "check": 0, "follow": 0, "specifi": 0, "format": 0, "state": [0, 2], "string": 0, "bool": 0, "true": 0, "i": [0, 2, 4, 5], "correct": 0, "fals": 0, "otherwis": 0, "validate_input": [0, 3], "locat": [0, 2], "dict": [0, 2, 4], "thi": [0, 2, 4, 5], "function": [0, 2, 4], "request": [0, 5], "bodi": 0, "sent": 0, "client": [0, 4], "error": 0, "messag": 0, "pass": 0, "doesn": 0, "t": 0, "expect": 0, "required_field_str": 0, "eg": 0, "138": [0, 5], "brittani": [0, 5], "manor": [0, 5], "drive": [0, 5], "amherst": [0, 5], "ma": [0, 5], "1040": 0, "n": 0, "pleasant": 0, "st": 0, "percentage_length": [0, 4, 5], "required_field_int": 0, "should": 0, "100": [0, 5], "max_min": [0, 4, 5], "min": [0, 4, 5], "max": [0, 4], "validate_loc": [0, 3], "lat": [0, 2, 4, 5], "long": [0, 2, 4, 5], "mean": [0, 4], "find": [0, 4], "map": [0, 2, 4], "which": [0, 2, 4], "distanc": [0, 4, 5], "less": 0, "than": 0, "1": 0, "km": 0, "latitud": [0, 2], "longitud": [0, 2], "graph_nod": 0, "nearest": [0, 4], "none": 0, "server": 1, "helper": [1, 3], "modul": [1, 3], "map_gener": [1, 3], "packag": [1, 3], "path_find": [1, 3], "index": 1, "search": 1, "page": 1, "generatemap": [2, 3], "respons": [2, 4, 5], "li": [2, 4], "It": 2, "also": 2, "save": 2, "cach": 2, "case": 2, "miss": 2, "serv": 2, "hit": 2, "add_node_elevations_open": [2, 3], "g": 2, "max_locations_per_batch": 2, "180": 2, "pause_dur": 2, "0": 2, "02": 2, "precis": 2, "3": 2, "provid": 2, "method": 2, "get_node_elevation_googl": 2, "attach": 2, "elev": [2, 4, 5], "data": [2, 5], "each": [2, 4], "us": [2, 4], "googl": 2, "": [2, 4], "api": [2, 5], "although": 2, "free": 2, "henc": 2, "here": 2, "we": [2, 4], "have": [2, 4], "modifi": [2, 4], "open": 2, "an": [2, 4, 5], "version": [2, 4], "generategraphplot": [2, 3], "plot": 2, "default": 2, "plotter": 2, "jpg": 2, "imag": 2, "info": 2, "For": 2, "get": 2, "ar": [2, 4], "wil": 2, "getlocationinfo": [2, 3], "fetch": [2, 4], "particular": 2, "pars": 2, "while": [2, 4], "geopi": 2, "librari": 2, "need": [2, 4], "dictionari": 2, "consist": 2, "submodul": 3, "generate_map": 3, "content": 3, "a_star_path_find": 3, "astarpathfind": [3, 4], "find_next_nod": [3, 4], "get_coordin": [3, 4], "get_path": [3, 4], "heuristic_funct": [3, 4], "algorithm_selector": 3, "algorithmselector": [3, 4], "pick_algorithm": [3, 4], "djikistra_path_find": 3, "djikstrapathfind": [3, 4], "generate_path_arrai": [3, 4], "get_elevation_gain": [3, 4], "get_net_elev": [3, 4], "get_path_length": [3, 4], "get_shortest_path": [3, 4], "fetch_rout": [3, 5], "implement": 4, "astar": 4, "shortest": 4, "algorithm": [4, 5], "suitabl": 4, "satisfii": 4, "percetang": 4, "gain": [4, 5], "requir": 4, "node_cost": 4, "next": 4, "mimimum": 4, "cost": 4, "current": 4, "metrix": 4, "minimum": 4, "x": 4, "y": 4, "coordin": 4, "repres": 4, "coord": 4, "tupl": 4, "where": 4, "correspond": 4, "co": [4, 5], "ordin": [4, 5], "corrspond": 4, "start": 4, "end": 4, "min_max_gain": 4, "most": [4, 5], "optim": [4, 5], "between": 4, "input": 4, "paramat": 4, "combin": 4, "consid": 4, "user": 4, "prefer": [4, 5], "maximum": 4, "one": 4, "anoth": 4, "edg": 4, "weight": 4, "percentag": 4, "abov": 4, "willing": 4, "go": 4, "choic": 4, "minim": 4, "maxim": 4, "intend": 4, "want": 4, "pair": [4, 5], "denot": [4, 5], "across": 4, "As": 4, "heurist": 4, "finder": 4, "simpl": 4, "possibl": 4, "eculedian": 4, "first": 4, "second": 4, "eculidian": 4, "two": 4, "pick": 4, "a_star": 4, "djikistra": 4, "final": 4, "result": 4, "nearest_node_sourc": 4, "nearest_node_destin": 4, "take": [4, 5], "start_nod": 4, "end_nod": 4, "both": 4, "Then": 4, "min_max": 4, "reverse_path": 4, "kei": 4, "valu": 4, "parent": 4, "child": 4, "reprsent": 4, "net": [4, 5], "travers": 4, "can": 4, "achiev": [4, 5], "entir": 4, "represt": 4, "post": 5, "give": 5, "rout": 5, "hicker": 5, "biker": 5, "common": 5, "dijkstra": 5, "actual": 5}, "objects": {"": [[0, 0, 0, "-", "helper"], [2, 0, 0, "-", "map_generator"], [4, 0, 0, "-", "path_finder"], [5, 0, 0, "-", "server"]], "helper": [[0, 1, 1, "", "helper"]], "helper.helper": [[0, 2, 1, "", "route_length"], [0, 2, 1, "", "validate_address"], [0, 2, 1, "", "validate_input"], [0, 2, 1, "", "validate_location"]], "map_generator": [[2, 0, 0, "-", "generate_map"]], "map_generator.generate_map": [[2, 1, 1, "", "GenerateMap"]], "map_generator.generate_map.GenerateMap": [[2, 2, 1, "", "add_node_elevations_open"], [2, 2, 1, "", "generateGraphPlot"], [2, 2, 1, "", "generateMap"], [2, 2, 1, "", "getLocationInfo"]], "path_finder": [[4, 0, 0, "-", "a_star_path_finder"], [4, 0, 0, "-", "algorithm_selector"], [4, 0, 0, "-", "djikistra_path_finder"]], "path_finder.a_star_path_finder": [[4, 1, 1, "", "AStarPathFinder"]], "path_finder.a_star_path_finder.AStarPathFinder": [[4, 2, 1, "", "find_next_node"], [4, 2, 1, "", "get_coordinates"], [4, 2, 1, "", "get_path"], [4, 2, 1, "", "heuristic_function"]], "path_finder.algorithm_selector": [[4, 1, 1, "", "AlgorithmSelector"]], "path_finder.algorithm_selector.AlgorithmSelector": [[4, 2, 1, "", "pick_algorithm"]], "path_finder.djikistra_path_finder": [[4, 1, 1, "", "DjikstraPathFinder"]], "path_finder.djikistra_path_finder.DjikstraPathFinder": [[4, 2, 1, "", "generate_path_array"], [4, 2, 1, "", "get_coordinates"], [4, 2, 1, "", "get_elevation_gain"], [4, 2, 1, "", "get_net_elevations"], [4, 2, 1, "", "get_path"], [4, 2, 1, "", "get_path_length"], [4, 2, 1, "", "get_shortest_path"]], "server": [[5, 3, 1, "", "fetch_route"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"helper": 0, "modul": [0, 2, 4, 5], "welcom": 1, "elena": 1, "document": 1, "": 1, "content": [1, 2, 4], "indic": 1, "tabl": 1, "map_gener": 2, "packag": [2, 4], "submodul": [2, 4], "generate_map": 2, "server": [3, 5], "path_find": 4, "a_star_path_find": 4, "algorithm_selector": 4, "djikistra_path_find": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"helper module": [[0, "module-helper"]], "Welcome to EleNa Documentation\u2019s documentation!": [[1, "welcome-to-elena-documentation-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "map_generator package": [[2, "map-generator-package"]], "Submodules": [[2, "submodules"], [4, "submodules"]], "map_generator.generate_map module": [[2, "module-map_generator.generate_map"]], "Module contents": [[2, "module-map_generator"], [4, "module-path_finder"]], "server": [[3, "server"]], "path_finder package": [[4, "path-finder-package"]], "path_finder.a_star_path_finder module": [[4, "module-path_finder.a_star_path_finder"]], "path_finder.algorithm_selector module": [[4, "module-path_finder.algorithm_selector"]], "path_finder.djikistra_path_finder module": [[4, "module-path_finder.djikistra_path_finder"]], "server module": [[5, "module-server"]]}, "indexentries": {"helper": [[0, "module-helper"]], "helper (class in helper)": [[0, "helper.helper"]], "module": [[0, "module-helper"], [2, "module-map_generator"], [2, "module-map_generator.generate_map"], [4, "module-path_finder"], [4, "module-path_finder.a_star_path_finder"], [4, "module-path_finder.algorithm_selector"], [4, "module-path_finder.djikistra_path_finder"], [5, "module-server"]], "route_length() (helper.helper method)": [[0, "helper.helper.route_length"]], "validate_address() (helper.helper method)": [[0, "helper.helper.validate_address"]], "validate_input() (helper.helper method)": [[0, "helper.helper.validate_input"]], "validate_location() (helper.helper method)": [[0, "helper.helper.validate_location"]], "generatemap (class in map_generator.generate_map)": [[2, "map_generator.generate_map.GenerateMap"]], "add_node_elevations_open() (map_generator.generate_map.generatemap method)": [[2, "map_generator.generate_map.GenerateMap.add_node_elevations_open"]], "generategraphplot() (map_generator.generate_map.generatemap method)": [[2, "map_generator.generate_map.GenerateMap.generateGraphPlot"]], "generatemap() (map_generator.generate_map.generatemap method)": [[2, "map_generator.generate_map.GenerateMap.generateMap"]], "getlocationinfo() (map_generator.generate_map.generatemap method)": [[2, "map_generator.generate_map.GenerateMap.getLocationInfo"]], "map_generator": [[2, "module-map_generator"]], "map_generator.generate_map": [[2, "module-map_generator.generate_map"]], "astarpathfinder (class in path_finder.a_star_path_finder)": [[4, "path_finder.a_star_path_finder.AStarPathFinder"]], "algorithmselector (class in path_finder.algorithm_selector)": [[4, "path_finder.algorithm_selector.AlgorithmSelector"]], "djikstrapathfinder (class in path_finder.djikistra_path_finder)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder"]], "find_next_node() (path_finder.a_star_path_finder.astarpathfinder method)": [[4, "path_finder.a_star_path_finder.AStarPathFinder.find_next_node"]], "generate_path_array() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.generate_path_array"]], "get_coordinates() (path_finder.a_star_path_finder.astarpathfinder method)": [[4, "path_finder.a_star_path_finder.AStarPathFinder.get_coordinates"]], "get_coordinates() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_coordinates"]], "get_elevation_gain() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_elevation_gain"]], "get_net_elevations() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_net_elevations"]], "get_path() (path_finder.a_star_path_finder.astarpathfinder method)": [[4, "path_finder.a_star_path_finder.AStarPathFinder.get_path"]], "get_path() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_path"]], "get_path_length() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_path_length"]], "get_shortest_path() (path_finder.djikistra_path_finder.djikstrapathfinder method)": [[4, "path_finder.djikistra_path_finder.DjikstraPathFinder.get_shortest_path"]], "heuristic_function() (path_finder.a_star_path_finder.astarpathfinder method)": [[4, "path_finder.a_star_path_finder.AStarPathFinder.heuristic_function"]], "path_finder": [[4, "module-path_finder"]], "path_finder.a_star_path_finder": [[4, "module-path_finder.a_star_path_finder"]], "path_finder.algorithm_selector": [[4, "module-path_finder.algorithm_selector"]], "path_finder.djikistra_path_finder": [[4, "module-path_finder.djikistra_path_finder"]], "pick_algorithm() (path_finder.algorithm_selector.algorithmselector method)": [[4, "path_finder.algorithm_selector.AlgorithmSelector.pick_algorithm"]], "fetch_route() (in module server)": [[5, "server.fetch_route"]], "server": [[5, "module-server"]]}})